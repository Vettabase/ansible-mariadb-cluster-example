#!/bin/bash


# Find the last automatically generated password from the error log,
# and build root .my.cnf with credentials.
# Oracle states that it would be better to generate a new password,
# but we don't see how generating a new password can possibly stop
# someone who got access to the filesystem.

error_log=$( cat /etc/mysql/my.cnf |grep 'log_error ' |tail -1 |awk '{print $NF}' )
base_dir=$( cat /etc/mysql/my.cnf |grep 'basedir ' |tail -1 |awk '{print $NF}' )
password=$( cat $error_log |grep 'A temporary password is generated' |tail -1 |awk '{print $NF}' )

if [ -z "$password" ];
then
    echo 'No password was generated recently enough to be found in the Error Log.'
    echo 'If /root/.my.cnf exists, it is left unchanged.'
    exit 0
fi

# generate temporary .my.cnf to be able to run a query
echo '[client]'                                 > /root/.my.cnf
echo "password = '$password'"                  >> /root/.my.cnf

# activate the password by replacing it with itself
$base_dir/bin/mysql --connect-expired-password \
    -e "ALTER USER 'root'@'localhost' IDENTIFIED BY '{{ superuser_password }}';"

# regenerate proper .my.cnf with the new password
echo '# root MySQL credentials file'            > /root/.my.cnf
echo '# !! DO NOT EDIT THIS FILE MANUALLY !!'  >> /root/.my.cnf
echo '# It is generated by find-password.sh'   >> /root/.my.cnf
echo ''                                        >> /root/.my.cnf
echo '[client]'                                >> /root/.my.cnf
echo 'user = root'                             >> /root/.my.cnf
echo "password = '{{ superuser_password }}'"   >> /root/.my.cnf
echo ''                                        >> /root/.my.cnf
echo "# EOF"                                   >> /root/.my.cnf

